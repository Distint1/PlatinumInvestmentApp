{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Funded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x596d37511a0686e19bf25327a2ab541284a244cc5e29be85333e39b819504081",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "576863",
    "logsBloom": "0x
    "blockHash": "0xc0be6450b7573ab811c832f9a586503eefe408ce3f2a6f67cc153c350a618f10",
    "transactionHash": "0x596d37511a0686e19bf25327a2ab541284a244cc5e29be85333e39b819504081",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "576863",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "cd843256efb67991fcf0095651380942",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    event Funded(address indexed from, uint256 amount);\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface public priceFeed;\\n    \\n    constructor(address priceFeedAddress) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    \\n    // function getVersion() public view returns (uint256){\\n    //     // ETH/USD price feed address of Goerli Network.\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n    //     return priceFeed.version();\\n    // }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n            (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    \\n\\n    fallback() external payable {\\n        \\n    }\\n\\n    receive() external payable {\\n        \\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\",\"keccak256\":\"0x02fbb906bc254d2be77582cb86a863d38404151472693ff568ac4051c5eb8fc9\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n//Library cant send Ether, all funcions needs to be internal\\n\\nlibrary PriceConverter {\\n    //This next line of code is to convert to the ETH to USd and also to call the API into this contract.\\n\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // There are two things we need and are listed below to communicate with the call contract.\\n        //ABI\\n        //Address 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        \\n        //(uint80 roundId, int price, uint startedAt, uint timestamp, uint80 answeredInRound) = priceFeed.latestRoundData\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n        // 3000.000000\\n        return uint256(price * 1e10); //1**10 == 10000000000\\n    }\\n\\n    function getVersion() internal view returns (uint256) {\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        );\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount, AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\\n// What is reverting? Undo any action before, and send remaining gas back\\n\",\"keccak256\":\"0x82da9093a2ccdd69908e9b20f9826c69abe5ffa458f5d275d97c7647d63333a9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516109f63803806109f68339818101604052810190610032919061011d565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b600060208284031215610133576101326100ba565b5b600061014184828501610108565b91505092915050565b61089d806101596000396000f3fe6080604052600436106100595760003560e01c80633ccfd60b146100625780633e47d6f3146100795780636b69a592146100b6578063741bef1a146100e15780638da5cb5b1461010c578063dc0d3dff1461013757610060565b3661006057005b005b34801561006e57600080fd5b50610077610174565b005b34801561008557600080fd5b506100a0600480360381019061009b9190610570565b6103b6565b6040516100ad91906105b6565b60405180910390f35b3480156100c257600080fd5b506100cb6103ce565b6040516100d891906105b6565b60405180910390f35b3480156100ed57600080fd5b506100f66103db565b6040516101039190610630565b60405180910390f35b34801561011857600080fd5b50610121610401565b60405161012e919061065a565b60405180910390f35b34801561014357600080fd5b5061015e600480360381019061015991906106a1565b610427565b60405161016b919061065a565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101fb576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156102a657600060018281548110610221576102206106ce565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061029e9061072c565b9150506101fe565b50600067ffffffffffffffff8111156102c2576102c1610775565b5b6040519080825280602002602001820160405280156102f05781602001602082028036833780820191505090505b5060019080519060200190610306929190610466565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161032d906107d5565b60006040518083038185875af1925050503d806000811461036a576040519150601f19603f3d011682016040523d82523d6000602084013e61036f565b606091505b50509050806103b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103aa90610847565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061043757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8280548282559060005260206000209081019282156104df579160200282015b828111156104de5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610486565b5b5090506104ec91906104f0565b5090565b5b808211156105095760008160009055506001016104f1565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061053d82610512565b9050919050565b61054d81610532565b811461055857600080fd5b50565b60008135905061056a81610544565b92915050565b6000602082840312156105865761058561050d565b5b60006105948482850161055b565b91505092915050565b6000819050919050565b6105b08161059d565b82525050565b60006020820190506105cb60008301846105a7565b92915050565b6000819050919050565b60006105f66105f16105ec84610512565b6105d1565b610512565b9050919050565b6000610608826105db565b9050919050565b600061061a826105fd565b9050919050565b61062a8161060f565b82525050565b60006020820190506106456000830184610621565b92915050565b61065481610532565b82525050565b600060208201905061066f600083018461064b565b92915050565b61067e8161059d565b811461068957600080fd5b50565b60008135905061069b81610675565b92915050565b6000602082840312156106b7576106b661050d565b5b60006106c58482850161068c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107378261059d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561076a576107696106fd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006107bf6000836107a4565b91506107ca826107af565b600082019050919050565b60006107e0826107b2565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610831600b836107ea565b915061083c826107fb565b602082019050919050565b6000602082019050818103600083015261086081610824565b905091905056fea26469706673582212206a79e622f8aa8fadba8b588e3364623fa856b06c4a3f026ba91d129f1ff34c3f64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c80633ccfd60b146100625780633e47d6f3146100795780636b69a592146100b6578063741bef1a146100e15780638da5cb5b1461010c578063dc0d3dff1461013757610060565b3661006057005b005b34801561006e57600080fd5b50610077610174565b005b34801561008557600080fd5b506100a0600480360381019061009b9190610570565b6103b6565b6040516100ad91906105b6565b60405180910390f35b3480156100c257600080fd5b506100cb6103ce565b6040516100d891906105b6565b60405180910390f35b3480156100ed57600080fd5b506100f66103db565b6040516101039190610630565b60405180910390f35b34801561011857600080fd5b50610121610401565b60405161012e919061065a565b60405180910390f35b34801561014357600080fd5b5061015e600480360381019061015991906106a1565b610427565b60405161016b919061065a565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101fb576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156102a657600060018281548110610221576102206106ce565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061029e9061072c565b9150506101fe565b50600067ffffffffffffffff8111156102c2576102c1610775565b5b6040519080825280602002602001820160405280156102f05781602001602082028036833780820191505090505b5060019080519060200190610306929190610466565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161032d906107d5565b60006040518083038185875af1925050503d806000811461036a576040519150601f19603f3d011682016040523d82523d6000602084013e61036f565b606091505b50509050806103b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103aa90610847565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061043757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8280548282559060005260206000209081019282156104df579160200282015b828111156104de5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610486565b5b5090506104ec91906104f0565b5090565b5b808211156105095760008160009055506001016104f1565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061053d82610512565b9050919050565b61054d81610532565b811461055857600080fd5b50565b60008135905061056a81610544565b92915050565b6000602082840312156105865761058561050d565b5b60006105948482850161055b565b91505092915050565b6000819050919050565b6105b08161059d565b82525050565b60006020820190506105cb60008301846105a7565b92915050565b6000819050919050565b60006105f66105f16105ec84610512565b6105d1565b610512565b9050919050565b6000610608826105db565b9050919050565b600061061a826105fd565b9050919050565b61062a8161060f565b82525050565b60006020820190506106456000830184610621565b92915050565b61065481610532565b82525050565b600060208201905061066f600083018461064b565b92915050565b61067e8161059d565b811461068957600080fd5b50565b60008135905061069b81610675565b92915050565b6000602082840312156106b7576106b661050d565b5b60006106c58482850161068c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107378261059d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561076a576107696106fd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006107bf6000836107a4565b91506107ca826107af565b600082019050919050565b60006107e0826107b2565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610831600b836107ea565b915061083c826107fb565b602082019050919050565b6000602082019050818103600083015261086081610824565b905091905056fea26469706673582212206a79e622f8aa8fadba8b588e3364623fa856b06c4a3f026ba91d129f1ff34c3f64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 69,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 79,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}